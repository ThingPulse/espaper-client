; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
; This got inspiration from https://github.com/arendst/Sonoff-Tasmota

[platformio]
src_dir                   = EspaperClient


; *** Uncomment one of the lines below to build/upload only one environment
;env_default               = Espaper29Bw-PROD
;env_default               = Espaper29Bw-TEST
;env_default               = Espaper29Bw-DEV
;env_default               = Espaper42Bw-PROD
;env_default               = Espaper42Bw-TEST
;env_default               = Espaper42Bw-DEV
;env_default               = TTGOT529Bw-PROD
;env_default               = TTGOT529Bw-TEST
;env_default               = TTGOT529Bw-DEV
;env_default               = ESPColorKit-TEST

[common]
client_version            = -DCLIENT_VERSION=V029
monitor_speed             = 115200
upload_speed              = 921600
upload_resetmethod        = nodemcu

lib_deps                  = Mini Grafx@1.2.2

; *** Upload Serial reset method for Wemos and NodeMCU
upload_port               = /dev/cu.SLAB_USBtoUART
extra_scripts             = pio/hooks.py


[esp8266]
; *** Esp8266 core for Arduino version 2.5.0
platform                  = espressif8266@2.2.0
build_flags               = -D NDEBUG
                            -mtarget-align
                            ${common.client_version}
                            -Wl,-Map,firmware.map
                            -Wl,-Teagle.flash.2m512.ld
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
                            -DVTABLES_IN_FLASH
                            -fno-exceptions
                            -lstdc++
framework                 = arduino
board                     = esp_wroom_02
board_build.flash_mode    = dout
build_unflags             = -Wall

; *** Fix espressif8266@1.7.0 induced undesired all warnings
build_unflags             = -Wall

; set CPU frequency to 80MHz (default) or 160MHz
board_build.f_cpu         = 80000000L
;board_build.f_cpu         = 160000000L

[esp32]
framework = arduino
board = esp-wrover-kit
platform = espressif32
;board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu         = 80000000L
;board_build.f_cpu         = 160000000L
;build_unflags = ${common.build_unflags}
build_flags = ${common.client_version}

[env:Espaper29Bw-PROD]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER29BW
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:Espaper29Bw-TEST]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER29BW -DTEST_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:Espaper29Bw-DEV]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER29BW -DDEV_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}


[env:Espaper42Bw-PROD]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER42BW
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:Espaper42Bw-TEST]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER42BW -DTEST_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:Espaper42Bw-DEV]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESPAPER42BW -DDEV_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:ESPColorKit-TEST]
platform = ${esp8266.platform}
framework = ${esp8266.framework}
board = ${esp8266.board}
board_build.flash_mode = ${esp8266.board_build.flash_mode}
board_build.f_cpu = ${esp8266.board_build.f_cpu}
build_unflags = ${esp8266.build_unflags}
build_flags = ${esp8266.build_flags} -DESP_COLOR_KIT -DTEST_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:TTGOT529Bw-PROD]
framework = arduino
board = esp-wrover-kit
platform = espressif32
;board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${esp32.board_build.f_cpu}
;build_unflags = ${common.build_unflags}
build_flags = ${esp32.build_flags} -DTTGOT529BW
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:TTGOT529Bw-TEST]
framework = arduino
board = esp-wrover-kit
platform = espressif32
;board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${esp32.board_build.f_cpu}
;build_unflags = ${common.build_unflags}
build_flags = ${esp32.build_flags} -DTTGOT529BW -DTEST_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}

[env:TTGOT529Bw-DEV]
framework = arduino
board = esp-wrover-kit
platform = espressif32
;board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${esp32.board_build.f_cpu}
;build_unflags = ${common.build_unflags}
build_flags = ${esp32.build_flags} -DTTGOT529BW -DDEV_ENV
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_deps = ${common.lib_deps}
